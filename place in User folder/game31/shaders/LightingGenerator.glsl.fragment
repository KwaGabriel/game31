
#ifdef GL_ES
#define LOWP lowp
precision mediump float;
#else
#define LOWP 
#endif

#define MAX_SAMPLES 16.0

varying vec2 v_texCoords;

uniform sampler2D u_texture;

uniform vec2 u_center;

uniform float u_lightingEdge;
uniform float u_lightingScale;
uniform float u_lightingGamma;

uniform float u_raysScale;
uniform float u_raysGamma;

void main() {
	const float accum = 1.0 / float(MAX_SAMPLES);

	vec2 uv = v_texCoords;

    float center = texture2D(u_texture, uv).a;

	// Lighting
	float scale = mix(1.0, 1.0 - accum, u_lightingScale);
	float col = center;
	for (float i = 0.0; i < MAX_SAMPLES; i += 1.0) {
        uv = (uv - u_center) * scale + u_center;
        col += texture2D(u_texture, uv).a;
    }

	float lighting = col * accum;

    lighting = pow(lighting, u_lightingGamma); 		//gamma-to-linear, vec3(1.0 / 2.2), 0.4545
    lighting = 1.0 - smoothstep(u_lightingEdge, 1.0, lighting);

	// Godrays
	uv = v_texCoords;
	scale = mix(1.0, 1.0 - accum, u_raysScale);
    col = center;
	for (float i = 0.0; i < MAX_SAMPLES; i += 1.0) {
        uv = (uv - u_center) * scale + u_center;
        col += texture2D(u_texture, uv).a;
    }

	float rays = col * accum;

    rays = pow(rays, u_raysGamma); 		//gamma-to-linear, vec3(1.0 / 2.2), 0.4545
    rays = smoothstep(0.0, 1.0, rays);

    gl_FragColor = vec4(lighting, rays, 0.0, 0.0);
}
