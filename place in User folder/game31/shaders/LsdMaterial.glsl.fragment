
#ifdef GL_ES
#define LOWP lowp
precision mediump float;
#else
#define LOWP 
#endif

varying vec2 v_texCoords;

uniform sampler2D u_texture;

uniform float u_progress;
uniform float u_amount;

uniform vec4 u_color;

vec3 rgb2hsv(vec3 c)
{
    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));

    float d = q.x - min(q.w, q.y);
    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d)), d / q.x, q.x);
}

vec3 hsv2rgb(vec3 c)
{
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
}

void main() {
	
	vec4 modulator = texture2D(u_texture, v_texCoords);
	
	vec3 color = vec3(0.0, 0.0, 0.0);
	color = rgb2hsv(color);
	color.x = mod(((modulator.x + modulator.y + modulator.z) * 0.7) + u_progress, 1.0);
	color.y = 1.0;
	color.z = 1.0;
	color = hsv2rgb(color);
	
	gl_FragColor = mix(vec4(color, 1.0), modulator, u_amount) * u_color;
}
